name: "Deploy Static Next.js Site to External Repo"
description: "Builds a Next.js app (static export) and pushes the out/ directory to a target repo/branch with CNAME."
inputs:
  pkg:
    description: "Workspace package name to build (e.g., @apps/downloadvimeo)"
    required: true
  dir:
    description: "Site directory (e.g., sites/downloadvimeo)"
    required: true
  repo:
    description: "Target GitHub repo to push to (owner/repo)"
    required: true
  branch:
    description: "Target branch to push to"
    required: false
    default: "gh-pages"
  cname:
    description: "Custom domain for CNAME file"
    required: false
  funding_branch:
    description: "Branch to update FUNDING.yml on (default repo branch)"
    required: false
    default: "main"
runs:
  using: "composite"
  steps:
    - name: Show inputs
      shell: bash
      run: |
        echo "pkg=${{ inputs.pkg }}"
        echo "dir=${{ inputs.dir }}"
        echo "repo=${{ inputs.repo }}"
        echo "branch=${{ inputs.branch }}"
        echo "cname=${{ inputs.cname }}"
        echo "funding_branch=${{ inputs.funding_branch }}"

    - name: Setup PNPM
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: pnpm
        cache-dependency-path: pnpm-lock.yaml

    - name: Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: List workspace packages
      shell: bash
      run: pnpm -r list --depth -1

    - name: Build site
      shell: bash
      env:
        NEXT_TELEMETRY_DISABLED: 1
      run: pnpm --filter "${{ inputs.pkg }}" build

    - name: Ensure static export exists
      shell: bash
      run: |
        if [ ! -d "${{ inputs.dir }}/out" ] || [ ! -f "${{ inputs.dir }}/out/index.html" ]; then
          echo "Export directory missing; attempting next export..."
          (cd "${{ inputs.dir }}" && npx --yes next@15 export || npx next export || true)
        fi
        echo "Contents of export directory:"
        ls -la "${{ inputs.dir }}/out" || (echo "out directory not found" && exit 1)

    - name: Add CNAME (if provided)
      shell: bash
      run: |
        if [ -n "${{ inputs.cname }}" ]; then
          mkdir -p "${{ inputs.dir }}/out"
          echo "${{ inputs.cname }}" > "${{ inputs.dir }}/out/CNAME"
        fi
        # Ensure GitHub Pages serves Next.js assets under _next
        # Jekyll ignores folders starting with an underscore unless .nojekyll exists.
        touch "${{ inputs.dir }}/out/.nojekyll"

    - name: Include FUNDING.yml if present
      shell: bash
      run: |
        if [ -f "${{ inputs.dir }}/.github/FUNDING.yml" ]; then
          echo "Including per-site .github/FUNDING.yml in publish branch"
          mkdir -p "${{ inputs.dir }}/out/.github"
          cp "${{ inputs.dir }}/.github/FUNDING.yml" "${{ inputs.dir }}/out/.github/FUNDING.yml"
        else
          echo "No per-site FUNDING.yml found at ${{ inputs.dir }}/.github/FUNDING.yml"
        fi

    - name: Update FUNDING.yml on default branch
      shell: bash
      env:
        GH_PAT: ${{ env.GH_PAT }}
      run: |
        set -euo pipefail
        if [ ! -f "${{ inputs.dir }}/.github/FUNDING.yml" ]; then
          echo "No per-site FUNDING.yml to update on default branch"
          exit 0
        fi
        if [ -z "$GH_PAT" ]; then
          echo "Missing GH_PAT env. Cannot push to default branch." >&2
          exit 1
        fi
        REPO_URL="https://x-access-token:${GH_PAT}@github.com/${{ inputs.repo }}.git"
        TMP_DIR="$(mktemp -d)"
        BR="${{ inputs.funding_branch }}"
        echo "Cloning ${{ inputs.repo }} to update ${BR}/.github/FUNDING.yml"
        git clone --depth 1 "$REPO_URL" "$TMP_DIR"
        cd "$TMP_DIR"
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        if git ls-remote --heads origin "$BR" | grep -q .; then
          echo "Remote branch $BR exists"
          git fetch origin "$BR"
          git checkout -B "$BR" "origin/$BR"
        else
          echo "Remote branch $BR does not exist; creating orphan"
          git checkout --orphan "$BR"
          # remove tracked and untracked files without touching .git
          git rm -rf . >/dev/null 2>&1 || true
          git clean -fdx >/dev/null 2>&1 || true
        fi

        mkdir -p .github
        cp "$GITHUB_WORKSPACE/${{ inputs.dir }}/.github/FUNDING.yml" .github/FUNDING.yml
        git add .github/FUNDING.yml
        if git diff --cached --quiet; then
          echo "FUNDING.yml unchanged on $BR; skipping push"
        else
          git commit -m "Update FUNDING.yml from ${GITHUB_SHA::7}"
          git push -u origin "$BR"
        fi

    - name: Publish to external repo
      shell: bash
      env:
        GH_PAT: ${{ env.GH_PAT }}
      run: |
        if [ -z "$GH_PAT" ]; then
          echo "Missing GH_PAT env. Pass secrets.GH_PAT from workflow." >&2
          exit 1
        fi
        OUT_DIR="${{ inputs.dir }}/out"
        cd "$OUT_DIR"
        git init
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Deploy from ${GITHUB_SHA::7}"
        git branch -M "${{ inputs.branch }}"
        git remote add origin "https://x-access-token:${GH_PAT}@github.com/${{ inputs.repo }}.git"
        git push -f origin "${{ inputs.branch }}"
